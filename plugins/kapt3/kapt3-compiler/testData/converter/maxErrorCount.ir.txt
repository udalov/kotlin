MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:maxErrorCount.kt
    annotations:
      Suppress(names = ["UNRESOLVED_REFERENCE"] type=kotlin.Array<out kotlin.String> varargElementType=kotlin.String)
    CLASS CLASS name:Test modality:FINAL visibility:public superTypes:[kotlin.Any]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Test
      CONSTRUCTOR visibility:public <> () returnType:<root>.Test [primary]
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Any
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
        overridden:
          public open fun hashCode (): kotlin.Int declared in kotlin.Any
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
        overridden:
          public open fun toString (): kotlin.String declared in kotlin.Any
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN name:a visibility:public modality:FINAL <> ($this:<root>.Test, a:IrErrorType([Error type: Unresolved type for ABC]), b:IrErrorType([Error type: Unresolved type for BCD])) returnType:kotlin.Unit
        $this: VALUE_PARAMETER name:<this> type:<root>.Test
        VALUE_PARAMETER name:a index:0 type:IrErrorType([Error type: Unresolved type for ABC])
        VALUE_PARAMETER name:b index:1 type:IrErrorType([Error type: Unresolved type for BCD])
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun a (a: IrErrorType([Error type: Unresolved type for ABC]), b: IrErrorType([Error type: Unresolved type for BCD])): kotlin.Unit declared in <root>.Test'
            ERROR_EXPR 'skipBodies' type=kotlin.Nothing
